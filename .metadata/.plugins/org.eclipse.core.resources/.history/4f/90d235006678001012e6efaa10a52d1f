package com.testng.demo;

import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.testng.annotations.AfterClass;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterSuite;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeSuite;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

public class TestngSample {
	public WebDriver driver;
	
	@BeforeSuite
	public void setUpDatabaseConnection() {
	    System.out.println("Connecting to test database...");
	}
	
	@BeforeTest
	public void setUpEnvironment() {
	    System.out.println("Launching browser and navigating to base URL...");
        ChromeOptions options = new ChromeOptions();
        
        // Disable Chrome's password manager and save prompts
        options.addArguments("--disable-save-password-bubble");
        options.addArguments("--disable-notifications");
	    
		System.setProperty("webdriver.chrome.driver", "E:\\Selenium\\chromedriver-win64\\chromedriver.exe");
		driver = new ChromeDriver();
		JavascriptExecutor js = (JavascriptExecutor) driver;
	    driver.manage().window().maximize();
	    driver.get("https://www.saucedemo.com/");
	}
	
	@BeforeClass
	public void loginUser() {
	    System.out.println("Logging in with valid user credentials...");
	    driver.findElement(By.id("user-name")).sendKeys("standard_user");
	    driver.findElement(By.id("password")).sendKeys("secret_sauce");
	    driver.findElement(By.name("login-button")).click();
	}

	@BeforeMethod
	public void clearCart() {
	    System.out.println("Clearing shopping cart before each test...");
	}
	
	@Test(priority = 1)
	public void searchAndAddProduct() {
	    System.out.println("Searching for a product and adding to cart...");
	    driver.findElement(By.id("add-to-cart-sauce-labs-backpack")).click();
	}
	
	@AfterMethod
	public void takeScreenshotIfFailed() {
	    System.out.println("Taking screenshot on failure...");
	}
	
	@AfterClass
	public void logoutUser() {
	    System.out.println("Logging out after all tests...");
	    driver.findElement(By.id("react-burger-menu-btn")).click();
	    driver.findElement(By.cssSelector("#logout_sidebar_link")).click();
	    
	}
	
	@AfterTest
	public void closeBrowser() {
	    System.out.println("Closing browser after test execution...");
	    driver.quit();
	}
	
	@AfterSuite
	public void closeDatabaseConnection() {
	    System.out.println("Closing test database connection...");
	}
}
